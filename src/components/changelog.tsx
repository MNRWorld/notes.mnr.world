/**
 * Changelog Component
 * Documents all the new features and improvements
 */

"use client";

import React from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Icons } from '@/components/ui/icons';

interface ChangelogEntry {
  version: string;
  date: string;
  type: 'major' | 'minor' | 'patch';
  changes: {
    type: 'feature' | 'improvement' | 'fix' | 'breaking';
    title: string;
    description: string;
    icon: string;
  }[];
}

const changelog: ChangelogEntry[] = [
  {
    version: '2.0.0',
    date: '‡ß®‡ß¶‡ß®‡ß™-‡ß¶‡ßß-‡ßß‡ß´',
    type: 'major',
    changes: [
      {
        type: 'feature',
        title: '‡¶Ö‡¶ô‡ßç‡¶ï‡¶® ‡¶ü‡ßÅ‡¶≤',
        description: '‡¶ï‡ßç‡¶Ø‡¶æ‡¶®‡¶≠‡¶æ‡¶∏-‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶Ö‡¶ô‡ßç‡¶ï‡¶® ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶™‡¶®‡¶ø ‡¶®‡ßã‡¶ü‡ßá ‡¶õ‡¶¨‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶°‡¶æ‡¶Ø‡¶º‡¶æ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶Ü‡¶Å‡¶ï‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§',
        icon: 'Feather'
      },
      {
        type: 'feature',
        title: '‡¶ó‡¶£‡¶ø‡¶§‡ßá‡¶∞ ‡¶∏‡ßÇ‡¶§‡ßç‡¶∞ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü',
        description: 'LaTeX/KaTeX ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶è‡¶ï‡¶æ‡¶°‡ßá‡¶Æ‡¶ø‡¶ï ‡¶®‡ßã‡¶ü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ó‡¶£‡¶ø‡¶§‡ßá‡¶∞ ‡¶∏‡ßÇ‡¶§‡ßç‡¶∞ ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§',
        icon: 'Calculator'
      },
      {
        type: 'feature',
        title: '‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡¶°‡¶æ‡¶â‡¶® ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü/‡¶á‡¶Æ‡ßç‡¶™‡ßã‡¶∞‡ßç‡¶ü',
        description: '‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡¶°‡¶æ‡¶â‡¶® ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßá ‡¶®‡ßã‡¶ü ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶á‡¶Æ‡ßç‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡•§',
        icon: 'FileText'
      },
      {
        type: 'feature',
        title: '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶á‡¶®‡ßç‡¶ü‡¶ø‡¶ó‡ßç‡¶∞‡ßá‡¶∂‡¶®',
        description: '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶è‡¶¨‡¶Ç ‡¶ã‡¶§‡ßÅ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶π ‡¶®‡ßã‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡•§',
        icon: 'Calendar'
      },
      {
        type: 'feature',
        title: '‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤ ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ',
        description: 'Git-‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡¶π‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶¨‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶û‡ßç‡¶ö‡¶ø‡¶Ç ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§',
        icon: 'History'
      },
      {
        type: 'feature',
        title: '‡¶â‡¶®‡ßç‡¶®‡¶§ ‡¶ó‡ßã‡¶™‡¶®‡ßÄ‡¶Ø‡¶º‡¶§‡¶æ ‡¶Æ‡ßã‡¶°',
        description: '‡¶è‡¶®‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü‡ßá‡¶° ‡¶è‡¶¨‡¶Ç ‡¶ó‡ßã‡¶™‡¶®‡ßÄ‡¶Ø‡¶º ‡¶®‡ßã‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡•§',
        icon: 'Eye'
      },
      {
        type: 'feature',
        title: '‡¶ï‡¶æ‡¶ú ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ',
        description: '‡¶®‡ßã‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡•§',
        icon: 'CheckSquare'
      },
      {
        type: 'feature',
        title: '‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡¶Ç‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø',
        description: '‡¶õ‡¶¨‡¶ø, PDF, ‡¶Ö‡¶°‡¶ø‡¶ì ‡¶´‡¶æ‡¶á‡¶≤ ‡¶®‡ßã‡¶ü‡ßá ‡¶∏‡¶Ç‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡•§',
        icon: 'File'
      },
      {
        type: 'improvement',
        title: '‡¶â‡¶®‡ßç‡¶®‡¶§ PWA ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü',
        description: '‡¶Ö‡¶´‡¶≤‡¶æ‡¶á‡¶® ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂‡¶ø‡¶Ç ‡¶è‡¶¨‡¶Ç ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶∏‡¶ø‡¶ô‡ßç‡¶ï ‡¶â‡¶®‡ßç‡¶®‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§',
        icon: 'Bolt'
      }
    ]
  },
  {
    version: '1.5.0',
    date: '‡ß®‡ß¶‡ß®‡ß©-‡ßß‡ß®-‡ßß‡ß¶',
    type: 'minor',
    changes: [
      {
        type: 'improvement',
        title: '‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßá‡¶®‡ßç‡¶∏ ‡¶â‡¶®‡ßç‡¶®‡¶§‡¶ø',
        description: '‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶ó‡¶§‡¶ø ‡ß´‡ß¶% ‡¶¨‡ßÉ‡¶¶‡ßç‡¶ß‡¶ø ‡¶™‡ßá‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§',
        icon: 'Rocket'
      },
      {
        type: 'improvement',
        title: 'UI/UX ‡¶â‡¶®‡ßç‡¶®‡¶§‡¶ø',
        description: '‡¶Ü‡¶∞‡¶ì ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶¨‡¶æ‡¶®‡ßç‡¶ß‡¶¨ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏‡•§',
        icon: 'Brush'
      },
      {
        type: 'fix',
        title: '‡¶¨‡¶æ‡¶ó ‡¶´‡¶ø‡¶ï‡ßç‡¶∏',
        description: '‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶õ‡ßã‡¶ü‡¶ñ‡¶æ‡¶ü‡ßã ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§',
        icon: 'Bug'
      }
    ]
  }
];

const getTypeColor = (type: ChangelogEntry['type']) => {
  switch (type) {
    case 'major': return 'bg-red-500';
    case 'minor': return 'bg-yellow-500';
    case 'patch': return 'bg-green-500';
    default: return 'bg-gray-500';
  }
};

const getChangeTypeColor = (type: string) => {
  switch (type) {
    case 'feature': return 'bg-blue-500/10 text-blue-700 border-blue-200';
    case 'improvement': return 'bg-green-500/10 text-green-700 border-green-200';
    case 'fix': return 'bg-orange-500/10 text-orange-700 border-orange-200';
    case 'breaking': return 'bg-red-500/10 text-red-700 border-red-200';
    default: return 'bg-gray-500/10 text-gray-700 border-gray-200';
  }
};

export function Changelog() {
  return (
    <div className="space-y-8">
      <div className="text-center">
        <h2 className="text-3xl font-bold mb-2">üìù ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡ßá‡¶∞ ‡¶á‡¶§‡¶ø‡¶π‡¶æ‡¶∏</h2>
        <p className="text-muted-foreground">
          ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶®‡ßã‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßá‡¶∞ ‡¶∏‡¶ï‡¶≤ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶â‡¶®‡ßç‡¶®‡¶§‡¶ø‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ
        </p>
      </div>

      <div className="space-y-6">
        {changelog.map((entry, index) => (
          <motion.div
            key={entry.version}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
          >
            <Card>
              <CardHeader>
                <div className="flex items-center justify-between">
                  <CardTitle className="flex items-center gap-3">
                    <div className={`w-3 h-3 rounded-full ${getTypeColor(entry.type)}`} />
                    <span>‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® {entry.version}</span>
                    <Badge variant="outline">{entry.type}</Badge>
                  </CardTitle>
                  <span className="text-sm text-muted-foreground">
                    {entry.date}
                  </span>
                </div>
              </CardHeader>
              
              <CardContent>
                <div className="space-y-4">
                  {entry.changes.map((change, changeIndex) => {
                    const IconComponent = (Icons as any)[change.icon];
                    
                    return (
                      <motion.div
                        key={changeIndex}
                        initial={{ opacity: 0, x: -20 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: (index * 0.1) + (changeIndex * 0.05) }}
                        className="flex gap-3 p-3 rounded-lg border bg-muted/20"
                      >
                        <div className="flex-shrink-0">
                          {IconComponent && (
                            <IconComponent className="h-5 w-5 mt-0.5 text-muted-foreground" />
                          )}
                        </div>
                        
                        <div className="flex-1 space-y-1">
                          <div className="flex items-center gap-2">
                            <h4 className="font-medium">{change.title}</h4>
                            <Badge 
                              variant="outline" 
                              className={getChangeTypeColor(change.type)}
                            >
                              {change.type === 'feature' && '‡¶®‡¶§‡ßÅ‡¶® ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞'}
                              {change.type === 'improvement' && '‡¶â‡¶®‡ßç‡¶®‡¶§‡¶ø'}
                              {change.type === 'fix' && '‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®'}
                              {change.type === 'breaking' && '‡¶≠‡¶æ‡¶ô‡¶æ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®'}
                            </Badge>
                          </div>
                          <p className="text-sm text-muted-foreground">
                            {change.description}
                          </p>
                        </div>
                      </motion.div>
                    );
                  })}
                </div>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </div>
    </div>
  );
}

export default Changelog;
